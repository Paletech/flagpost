name: Deploy Backend and Frontend to AWS

  
on:
  push:
    branches:
      - main


jobs:
  deploy-backend:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Set Up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install AWS CLI
      run: |
        sudo apt-get update && \
        sudo pip install awscli

    - name: Create venv and Install dependencies
      working-directory: backend
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run migrations
      working-directory: backend
      
      env:
        DATABASE_URL: ${{ secrets.AWS_DATABASE_URL }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        PYTHONPATH: .
      run: |
        source venv/bin/activate
        alembic upgrade head
    
    - name: Create deployment package
      working-directory: backend
      run: |
        # cd venv/lib/python3.8/site-packages
        # zip -r9 ../../../../lambda.zip . -x "*alembic*" "*__pycache__*" "*.git*" "*.pyi*"
        # rm -r venv
        # cd ../../../../
        zip lambda.zip -r . -x "*.zip*" "lambda.zip" "*__pycache__*" "*alembic*" "*git*" "venv"
    
    - name: Upload deployment package to S3
      working-directory: backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET_NAME: flagpost-bucket
      run: |
        aws s3 cp lambda.zip s3://${{ env.S3_BUCKET_NAME }}/lambda.zip
    
    - name: Deploy to AWS Lambda
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        LAMBDA_FUNCTION_NAME: flagpost-lambda
        S3_BUCKET_NAME: flagpost-bucket
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --s3-bucket ${{ env.S3_BUCKET_NAME }} \
          --s3-key lambda.zip
  

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Install dependencies
        working-directory: frontend/
        run: npm install --force

      - name: Build app
        working-directory: frontend/
        env:
          CI: false
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to S3
        working-directory: frontend/
        env:
          aws-bucket-name: flagpost-react
        run: aws s3 sync ./build s3://${{ env.aws-bucket-name }} --delete
